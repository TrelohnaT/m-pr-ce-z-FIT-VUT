    ;todo
    %define y dword [esp+8]
    %define x dword [esp+4]
    
    fld y                       ;ST0=y
    push __float32__(5.625)
    fld dword [ESP]             ;ST0=5.625, ST1=y
    ADD ESP,4
    fdiv                        ;ST0=y/5.625
    
    fld x                       ;ST0=x, ST1=y/5.625
    faddp                       ;ST0=x+y/5.625
    fld x                       ;ST0=x, ST1=x+y/5.625
    fldpi                       ;ST0=pi, ST1=x, ST2=x+y/5.625
    fld1                        ;ST0=1, ST1=pi, ST2=x, ST3=x+y/5.625
    fadd ST0                   ;ST0=2, ST1=pi, ST2=x, ST3=x+y/5.625
    fmulp                       ;ST0=2pi, ST1=x, ST2=x+y/5.625
    fmulp                       ;ST0=2pix, ST1=x+y/5.625
    push __float32__(4.0)       
    fld dword [ESP]             ;ST0=4.0, ST1=2pix, ST2=x+y/5.625
    ADD ESP,4
    faddp                       ;ST0=4+2pix, ST1=x+y/5.625
    fsin                        ;ST0=sin(4+2pix), ST1=x+y/5.625
    push __float32__(45.0)       
    fld dword [ESP]             ;ST0=45.0, ST1=sin(4+2pix), ST2=x+y/5.625
    ADD ESP,4
    fxch                        ;ST0=sin(4+2pix), ST1=45.0, ST2=x+y/5.625
    fsubp                       ;ST0=45.0-sin(4+2pix), ST1=x+y/5.625
    fdivp                       ;ST0=(x+y/5.625)/(45.0-sin(4+2pix)
    
    fld y                       ;ST0=y, ST1=(x+y/5.625)/(45.0-sin(4+2pix)
    fabs                        ;ST0=abs(y), ST1=(x+y/5.625)/(45.0-sin(4+2pix)
    fsqrt                       ;ST0=sqrt(abs(y)), ST1=(x+y/5.625)/(45.0-sin(4+2pix)
    fld x                       ;ST0=x, ST1=sqrt(abs(y)), ST2=(x+y/5.625)/(45.0-sin(4+2pix)
    fxch                        ;ST0=sqrt(abs(y)), ST1=x, ST2=(x+y/5.625)/(45.0-sin(4+2pix)
    fsubp                       ;ST0=x-sqrt(abs(y)), ST1=(x+y/5.625)/(45.0-sin(4+2pix)
    
    ftst
    fstsw AX
    sahf    ;C3=ZF, C2=PF, C0=CF
    jnz .neni
    
    fxch                        ;ST0=(x+y/5.625)/(45.0-sin(4+2pix) ST1=x-sqrt(abs(y))
    ftst
    fstsw AX
    sahf    ;C3=ZF, C2=PF, C0=CF
    jc .minus
    jnc .plus
    
    
    .neni:
        fdivp                       ;ST0=[(x+y/5.625)/(45.0-sin(4+2pix)]/[x-sqrt(abs(y))]
        jmp .konec
    
    .plus:
        mov EAX, 0x7f800000
        push EAX
        fld dword [ESP]
        add ESP, 4
        fstp ST1
        jmp .konec
        
        
    .minus:
        mov EAX, 0xff800000
        push EAX
        fld dword [ESP]
        add ESP, 4
        fstp ST1
        jmp .konec
        
        
   .konec: 
    
    
    ret